OUTER JOINS:
THERE ARE DIFFERENT KINDS OF OUTER JOINS
LEFT OUTER JOIN
RIGHT OUTER JOIN
FULL OUTER JOIN


RIGHT OUTER JOIN
DISPLAY THE COMMON DATA DATA FROM 2 TABLES AND EXTRA DATA WILL BE DISPLAYED FROM RIGHT TABLE

SELECT L1.BOOK_CODE,L1.BOOK_TITLE,L2.SUPPLIER_NAME,L2.SUPPLIER_ID FROM 
LMS_BOOK_DETAILS AS L1 RIGHT OUTER JOIN LMS_SUPLLIERS_DETAILS AS L2
ON L1.SUPPLIER_ID = L2.SUPPLIER_ID;                ----- WE GET THE EXTRA DATA FROM RIGHT SIDE TABLE AND ALL COLUMNS WOULB E NULL IF THE DATA IS NOT PRESENT---

LEFT OUTER JOIN:
SELECT L1.BOOK_CODE,L1.BOOK_TITLE,L2.SUPPLIER_NAME,L2.SUPPLIER_ID FROM 
LMS_BOOK_DETAILS AS L1 LEFT OUTER JOIN LMS_SUPLLIERS_DETAILS AS L2
ON L1.SUPPLIER_ID = L2.SUPPLIER_ID;       -- EXTRA DATA .NET BOOK WILL BE ADDED BUT THERE IS NO SUPLLIER PRESENT SO IT WILL BE DISPLAYED AS NULL -----

SELECT L1.BOOK_CODE,L1.BOOK_TITLE,L2.SUPPLIER_NAME,L2.SUPPLIER_ID FROM 
LMS_BOOK_DETAILS AS L1 FULL OUTER JOIN LMS_SUPLLIERS_DETAILS AS L2
ON L1.SUPPLIER_ID = L2.SUPPLIER_ID;   -- FROM BOT TABLES THE EXTRA DATA WILL BE ADDED -----

WE CAN USE WHERE ,GROUP BYCLUASE IN THE JOINS 
----------------------------------------------------
HAVING CLAUSE:
 FIND  THE SUPLLIER DETAILS WHO HAS SUPLLIED MAX NUM OF BOOKS 

SELECT SUPPLIER_ID,MAX(COUNT(SUPPLIER_ID)) FROM LMS_BOOK_DETAILS
GROUP BY SUPPLIER_ID;   --- WE GET THE ERROR AS WE CANT PERFORM AN AGGREGATE FUNCTION ON EXPRESSION CONTAINING AGGREGATE FUNCTION ----

SELECT COUNT(SUPPLIER_ID) FROM LMS_BOOK_DETAILS GROUP BY
HAVING COUNT(SUPPLIER_ID)>=ALL(
SELECT COUNT(SUPPLIER_ID) FROM LMS_BOOK_DETAILS
GROUP BY SUPPLIER_ID);                             SUBQUERY: 4,3,1  ALL(0,4,3,1) >=ALL(0,4,3,1)
 
---- WE HAVE TO USE HAVING AFTER GROUP BY BECAUSE IN ALL THE OTHER CASES THE CASE MAY NOT BE CORRECT---
DISPLAY THE MEMBER_ID WHO HAS TAKEN LESS THAN OR EQUAL TO 2 BOOKS 

SELECT MEMBER_ID,COUNT(BOOK_CODE) FROM LMS_BOOK_ISSUE 
GROUP BY MEMBER_ID HAVING COUNT(BOOK_CODE)<=2;

SELECT MEMBER_NAME,COUNT(BOOK_CODE) AS BOOKScOUNT FROM LMS_BOOK_ISSUE AS L1 JOIN 
LMS_MEMBERS AS L2 ON L1.MEMBER_ID=L2.MEMBER_ID WHERE MEMBER_NAME LIKE 'A%'
GROUP BY MEMBER_NAME HAVING COUNT(BOOK_CODE)<2 ORDER BY MEMBER_NAME DESC;
------------------------------------------------
SELECT * FROM (SELECT FIRST_NAME,SALARY,DENSE_RANK() OVER(ORDER BY SALARY DESC) R FROM EMPLOYEE) AS E WHERE R=1;
DENSE_RANK IS INBUILT FUNCTION THAT DISPLAY THE RANK OF THE DATA BASED THE CONDITION



A1,3,4,5,7,8,10,11,12,13,15
REMAINING QUESTIONS:
2.Write a query to display the total number of books available in the library with alias name “NO_OF_BOOKS_AVAILABLE” (Which is not issued). 
Hint: The issued books details are available in the LMS_BOOK_ISSUE table.

SELECT COUNT(P2.BOOK_CODE) AS NOOFBOOKAVAIALABE FROM  LMS_BOOK_ISSUE AS P1 RIGHT JOIN LMS_BOOK_DETAILS AS P2
ON P1.BOOK_CODE=P2.BOOK_CODE WHERE P1.BOOK_CODE IS NULL;
6.Write a query to display the member id, member name, due date and date returned of the members who has
returned the books after the due date. Hint: Date_return is due date and Date_returned is actual book return date. 

SELECT P2.MEMBER_ID,P2.MEMBER_NAME,P1.DATE_RETURN,P1.DATE_RETURNED FROM 
LMS_BOOK_ISSUE AS P1 JOIN LMS_MEMBERS AS P2 ON P1.MEMBER_ID = P2.MEMBER_ID
WHERE DATE_RETURNED > DATE_RETURN;

9.Write a query to display the date on which the maximum numbers of books were issued 
and the number of books issued with alias name “NOOFBOOKS”.

SELECT DATE_ISSUE,COUNT(DATE_ISSUE) AS NOOFBOOKS FROM 
LMS_BOOK_ISSUE GROUP BY DATE_ISSUE HAVING COUNT(DATE_ISSUE)=(SELECT MAX(VALUE) FROM 
(SELECT COUNT(DATE_ISSUE) AS VALUE FROM LMS_BOOK_ISSUE GROUP BY DATE_ISSUE) AS P1)

14.Write a query to display the book code, book title ,supplier name and 
price of the book witch takes maximum price based on each supplier.

SELECT BOOK_CODE,BOOK_TITLE,SUPPLIER_NAME,PRICE FROM 
LMS_BOOK_DETAILS AS P1 JOIN LMS_SUPPLIERS_DETAILS AS P2
ON P1.SUPPLIER_ID=P2.SUPPLIER_ID WHERE PRICE=(SELECT MAX(PRICE) FROM LMS_BOOK_DETAILS);

Write a query to display the date on which the maximum numbers of books were issued and the
number of books issued with alias name “NOOFBOOKS”.
SELECT DATE_ISSUE,COUNT(DATE_ISSUE) AS NOOFBOOKS FROM 
LMS_BOOK_ISSUE GROUP BY DATE_ISSUE HAVING COUNT(DATE_ISSUE)=(SELECT MAX(VALUE) FROM 
(SELECT COUNT(DATE_ISSUE) AS VALUE FROM LMS_BOOK_ISSUE GROUP BY DATE_ISSUE) AS P1)



COMPLEX QUESTIONS
1

SELECT BOOK_CODE,BOOK_TITLE,SUPPLIER_NAME FROM 
LMS_BOOK_DETAILS AS P1 JOIN LMS_SUPPLIERS_DETAILS AS P2 ON
P1.SUPPLIER_ID = P2.SUPPLIER_ID WHERE 
P2.SUPPLIER_ID IN (SELECT SUPPLIER_ID FROM 
LMS_BOOK_DETAILS GROUP BY SUPPLIER_ID HAVING COUNT(SUPPLIER_ID)=(SELECT MAX(COUNTOFBOOKS) 
FROM (SELECT COUNT(*)AS  COUNTOFBOOKS FROM LMS_BOOK_DETAILS GROUP BY SUPPLIER_ID)AS DATA));

2.
SELECT P1.MEMBER_ID,P1.MEMBER_NAME,COUNT(MEMBER_ID =(SELECT MEMBER_ID FROM LMS_BOOK_ISSUE GROUP BY MEMBER_ID)) AS REMAININGBOOKS FROM 
LMS_MEMBERS AS P1 JOIN LMS_BOOK_ISSUE ON
P1.MEMBER_ID=P2.MEMBER_ID ---getting error need to get clarified from madam ---






